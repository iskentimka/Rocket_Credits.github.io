{"ast":null,"code":"var _jsxFileName = \"/Users/edzhisk/Desktop/Rocket Credits/src/pages/Home.js\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Mock Data for Movies (9 Movies for 3x3 Matrix)\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst movies = [{\n  id: 1,\n  title: \"Inception\",\n  image: `${process.env.PUBLIC_URL}/movies/inception.jpg`\n}, {\n  id: 2,\n  title: \"Interstellar\",\n  image: `${process.env.PUBLIC_URL}/movies/interstellar.jpg`\n}, {\n  id: 3,\n  title: \"The Dark Knight\",\n  image: `${process.env.PUBLIC_URL}/movies/dark-knight.jpg`\n}, {\n  id: 4,\n  title: \"Avatar\",\n  image: `${process.env.PUBLIC_URL}/movies/avatar.jpg`\n}, {\n  id: 5,\n  title: \"Avengers: Endgame\",\n  image: `${process.env.PUBLIC_URL}/movies/endgame.jpg`\n}, {\n  id: 6,\n  title: \"Titanic\",\n  image: `${process.env.PUBLIC_URL}/movies/titanic.jpg`\n}, {\n  id: 7,\n  title: \"The Matrix\",\n  image: `${process.env.PUBLIC_URL}/movies/matrix.jpg`\n}, {\n  id: 8,\n  title: \"Joker\",\n  image: `${process.env.PUBLIC_URL}/movies/joker.jpg`\n}, {\n  id: 9,\n  title: \"Spider-Man: No Way Home\",\n  image: `${process.env.PUBLIC_URL}/movies/spiderman.jpg`\n}];\nconst Home = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"relative min-h-screen bg-black text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative z-10 text-center py-20\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-4xl font-bold\",\n        children: \"Popular Movies\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative z-10 container mx-auto p-6\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-grid\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/payment\",\n          className: \"block\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: movie.image,\n              alt: movie.title,\n              className: \"movie-poster\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"movie-title\",\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this)\n        }, movie.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","Link","jsxDEV","_jsxDEV","movies","id","title","image","process","env","PUBLIC_URL","Home","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","to","src","alt","_c","$RefreshReg$"],"sources":["/Users/edzhisk/Desktop/Rocket Credits/src/pages/Home.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// Mock Data for Movies (9 Movies for 3x3 Matrix)\nconst movies = [\n  { id: 1, title: \"Inception\", image: `${process.env.PUBLIC_URL}/movies/inception.jpg` },\n  { id: 2, title: \"Interstellar\", image: `${process.env.PUBLIC_URL}/movies/interstellar.jpg` },\n  { id: 3, title: \"The Dark Knight\", image: `${process.env.PUBLIC_URL}/movies/dark-knight.jpg` },\n  { id: 4, title: \"Avatar\", image: `${process.env.PUBLIC_URL}/movies/avatar.jpg` },\n  { id: 5, title: \"Avengers: Endgame\", image: `${process.env.PUBLIC_URL}/movies/endgame.jpg` },\n  { id: 6, title: \"Titanic\", image: `${process.env.PUBLIC_URL}/movies/titanic.jpg` },\n  { id: 7, title: \"The Matrix\", image: `${process.env.PUBLIC_URL}/movies/matrix.jpg` },\n  { id: 8, title: \"Joker\", image: `${process.env.PUBLIC_URL}/movies/joker.jpg` },\n  { id: 9, title: \"Spider-Man: No Way Home\", image: `${process.env.PUBLIC_URL}/movies/spiderman.jpg` }\n];\n\nconst Home = () => {\n  return (\n    <div className=\"relative min-h-screen bg-black text-white\">\n      {/* Content */}\n      <div className=\"relative z-10 text-center py-20\">\n        <h1 className=\"text-4xl font-bold\">Popular Movies</h1>\n      </div>\n\n      {/* Movies List (Fixed 3x3 Grid) */}\n      <div className=\"relative z-10 container mx-auto p-6\">\n        <div className=\"movie-grid\">\n          {movies.map((movie) => (\n            <Link  key={movie.id} to= \"/payment\" className=\"block\">\n              <div className=\"movie-container\">\n                <img src={movie.image} alt={movie.title} className=\"movie-poster\" />\n                <p className=\"movie-title\">{movie.title}</p>\n              </div>\n            </Link>\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}