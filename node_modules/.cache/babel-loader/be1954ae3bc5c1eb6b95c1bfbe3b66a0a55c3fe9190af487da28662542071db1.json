{"ast":null,"code":"import React,{createContext,useContext,useState,useEffect}from\"react\";import{useNavigate}from\"react-router-dom\";// Create Auth Context\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();// List of known bad users (in a real app, this would come from a database)\nconst BAD_USERS=['baduser@example.com','scammer@example.com','fraud@example.com'];// Auth Provider Component\nexport const AuthProvider=_ref=>{let{children}=_ref;const[user,setUser]=useState(null);// Stores logged-in user\nconst[badUsers,setBadUsers]=useState(BAD_USERS);// List of bad users\nconst navigate=useNavigate();// Check for existing session on component mount\nuseEffect(()=>{const storedUser=localStorage.getItem('currentUser');if(storedUser){setUser(JSON.parse(storedUser));}// Load bad users list from localStorage or use default\nconst storedBadUsers=localStorage.getItem('badUsers');if(storedBadUsers){setBadUsers(JSON.parse(storedBadUsers));}else{localStorage.setItem('badUsers',JSON.stringify(BAD_USERS));}},[]);// Signup Function\nconst signup=(email,password)=>{try{// Get existing users or initialize empty array\nconst users=JSON.parse(localStorage.getItem('users')||'[]');// Check if user already exists\nif(users.some(user=>user.email===email)){return{success:false,message:\"User already exists.\"};}// Create new user with initial data\nconst newUser={email,password:btoa(password),// Basic encoding (in production, use proper hashing)\ncreatedAt:new Date().toISOString(),subscription:null,paymentHistory:[],status:'good',// Default status is good\nriskScore:0,// Risk score starts at 0\nprofile:{name:'',phone:'',address:''}};// Add new user to users array\nusers.push(newUser);localStorage.setItem('users',JSON.stringify(users));// Set current user\nconst{password:_,...userWithoutPassword}=newUser;setUser(userWithoutPassword);localStorage.setItem('currentUser',JSON.stringify(userWithoutPassword));return{success:true};}catch(error){console.error('Signup error:',error);return{success:false,message:\"An error occurred during signup.\"};}};// Login Function\nconst login=(email,password)=>{try{// Get users array\nconst users=JSON.parse(localStorage.getItem('users')||'[]');// Find user\nconst userData=users.find(user=>user.email===email);if(!userData)return{success:false,message:\"User not found.\"};// Check password (in production, use proper password comparison)\nif(userData.password!==btoa(password))return{success:false,message:\"Invalid password.\"};// Remove sensitive data before storing in state\nconst{password:_,...userWithoutPassword}=userData;// Set current user\nsetUser(userWithoutPassword);localStorage.setItem('currentUser',JSON.stringify(userWithoutPassword));return{success:true};}catch(error){console.error('Login error:',error);return{success:false,message:\"An error occurred during login.\"};}};// Logout Function\nconst logout=()=>{setUser(null);localStorage.removeItem('currentUser');navigate(\"/login\");};// Update User Profile\nconst updateProfile=profileData=>{try{const users=JSON.parse(localStorage.getItem('users')||'[]');const userIndex=users.findIndex(u=>u.email===user.email);if(userIndex===-1)return false;// Update user profile\nusers[userIndex].profile={...users[userIndex].profile,...profileData};// Update localStorage\nlocalStorage.setItem('users',JSON.stringify(users));// Update current user state\nconst updatedUser={...user,profile:users[userIndex].profile};setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));return true;}catch(error){console.error('Profile update error:',error);return false;}};// Update Subscription\nconst updateSubscription=subscriptionData=>{try{const users=JSON.parse(localStorage.getItem('users')||'[]');const userIndex=users.findIndex(u=>u.email===user.email);if(userIndex===-1)return false;// Update user subscription\nusers[userIndex].subscription=subscriptionData;// Add to payment history\nusers[userIndex].paymentHistory.push({date:new Date().toISOString(),type:subscriptionData.type,amount:subscriptionData.price,status:'completed'});// Update localStorage\nlocalStorage.setItem('users',JSON.stringify(users));// Update current user state\nconst updatedUser={...user,subscription:subscriptionData,paymentHistory:users[userIndex].paymentHistory};setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));return true;}catch(error){console.error('Subscription update error:',error);return false;}};// Check if user can use Rocket Credits\nconst canUseRocketCredits=email=>{// Get users array\nconst users=JSON.parse(localStorage.getItem('users')||'[]');// Find user\nconst userData=users.find(user=>user.email===email);if(!userData)return{allowed:false,message:\"User not found.\"};// Check user status\nif(userData.status==='bad'){return{allowed:true,message:\"Your account has been flagged for suspicious payment activity. Rocket Credits can reject your application.\"};}// Check risk score\nif(userData.riskScore>70){return{allowed:true,message:\"Due to your account's risk assessment, Rocket Credits can reject your application.\"};}return{allowed:true};};// Mark user as bad\nconst markUserAsBad=function(email){let reason=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"Suspicious activity\";try{// Update bad users list\nconst updatedBadUsers=[...badUsers,email.toLowerCase()];setBadUsers(updatedBadUsers);localStorage.setItem('badUsers',JSON.stringify(updatedBadUsers));// Update user status in users array\nconst users=JSON.parse(localStorage.getItem('users')||'[]');const userIndex=users.findIndex(u=>u.email.toLowerCase()===email.toLowerCase());if(userIndex!==-1){users[userIndex].status='bad';users[userIndex].riskScore=100;users[userIndex].suspensionReason=reason;users[userIndex].suspensionDate=new Date().toISOString();localStorage.setItem('users',JSON.stringify(users));}// If the current user is being marked as bad, log them out\nif(user&&user.email.toLowerCase()===email.toLowerCase()){logout();}return true;}catch(error){console.error('Error marking user as bad:',error);return false;}};// Mark user as good\nconst markUserAsGood=email=>{try{// Remove from bad users list\nconst updatedBadUsers=badUsers.filter(e=>e.toLowerCase()!==email.toLowerCase());setBadUsers(updatedBadUsers);localStorage.setItem('badUsers',JSON.stringify(updatedBadUsers));// Update user status in users array\nconst users=JSON.parse(localStorage.getItem('users')||'[]');const userIndex=users.findIndex(u=>u.email.toLowerCase()===email.toLowerCase());if(userIndex!==-1){users[userIndex].status='good';users[userIndex].riskScore=Math.max(0,users[userIndex].riskScore-50);// Reduce risk score\nusers[userIndex].suspensionReason=null;users[userIndex].suspensionDate=null;localStorage.setItem('users',JSON.stringify(users));}return true;}catch(error){console.error('Error marking user as good:',error);return false;}};// Increase user risk score\nconst increaseRiskScore=function(email){let points=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;try{const users=JSON.parse(localStorage.getItem('users')||'[]');const userIndex=users.findIndex(u=>u.email.toLowerCase()===email.toLowerCase());if(userIndex!==-1){users[userIndex].riskScore=Math.min(100,(users[userIndex].riskScore||0)+points);// If risk score exceeds threshold, mark as bad\nif(users[userIndex].riskScore>=80&&users[userIndex].status!=='bad'){users[userIndex].status='bad';// Also add to bad users list\nconst updatedBadUsers=[...badUsers,email.toLowerCase()];setBadUsers(updatedBadUsers);localStorage.setItem('badUsers',JSON.stringify(updatedBadUsers));}localStorage.setItem('users',JSON.stringify(users));// If the current user's risk score is being increased, update their state\nif(user&&user.email.toLowerCase()===email.toLowerCase()){const updatedUser={...user,riskScore:users[userIndex].riskScore,status:users[userIndex].status};setUser(updatedUser);localStorage.setItem('currentUser',JSON.stringify(updatedUser));// If user is now bad, log them out\nif(users[userIndex].status==='bad'){logout();}}}return true;}catch(error){console.error('Error increasing risk score:',error);return false;}};return/*#__PURE__*/_jsx(AuthContext.Provider,{value:{user,login,signup,logout,updateProfile,updateSubscription,canUseRocketCredits,markUserAsBad,markUserAsGood,increaseRiskScore,badUsers},children:children});};// Custom Hook to Use Auth Context\nexport const useAuth=()=>{return useContext(AuthContext);};","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","useNavigate","jsx","_jsx","AuthContext","BAD_USERS","AuthProvider","_ref","children","user","setUser","badUsers","setBadUsers","navigate","storedUser","localStorage","getItem","JSON","parse","storedBadUsers","setItem","stringify","signup","email","password","users","some","success","message","newUser","btoa","createdAt","Date","toISOString","subscription","paymentHistory","status","riskScore","profile","name","phone","address","push","_","userWithoutPassword","error","console","login","userData","find","logout","removeItem","updateProfile","profileData","userIndex","findIndex","u","updatedUser","updateSubscription","subscriptionData","date","type","amount","price","canUseRocketCredits","allowed","markUserAsBad","reason","arguments","length","undefined","updatedBadUsers","toLowerCase","suspensionReason","suspensionDate","markUserAsGood","filter","e","Math","max","increaseRiskScore","points","min","Provider","value","useAuth"],"sources":["/Users/edzhisk/Desktop/Rocket Credits/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\n// Create Auth Context\nconst AuthContext = createContext();\n\n// List of known bad users (in a real app, this would come from a database)\nconst BAD_USERS = [\n  'baduser@example.com',\n  'scammer@example.com',\n  'fraud@example.com'\n];\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Stores logged-in user\n  const [badUsers, setBadUsers] = useState(BAD_USERS); // List of bad users\n  const navigate = useNavigate();\n  // Check for existing session on component mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n\n    // Load bad users list from localStorage or use default\n    const storedBadUsers = localStorage.getItem('badUsers');\n    if (storedBadUsers) {\n      setBadUsers(JSON.parse(storedBadUsers));\n    } else {\n      localStorage.setItem('badUsers', JSON.stringify(BAD_USERS));\n    }\n  }, []);\n\n  // Signup Function\n  const signup = (email, password) => {\n    try {\n\n      // Get existing users or initialize empty array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      \n      // Check if user already exists\n      if (users.some(user => user.email === email)) {\n        return { success: false, message: \"User already exists.\" };\n      }\n\n      // Create new user with initial data\n      const newUser = {\n        email,\n        password: btoa(password), // Basic encoding (in production, use proper hashing)\n        createdAt: new Date().toISOString(),\n        subscription: null,\n        paymentHistory: [],\n        status: 'good', // Default status is good\n        riskScore: 0, // Risk score starts at 0\n        profile: {\n          name: '',\n          phone: '',\n          address: ''\n        }\n      };\n\n      // Add new user to users array\n      users.push(newUser);\n      localStorage.setItem('users', JSON.stringify(users));\n      \n      // Set current user\n      const { password: _, ...userWithoutPassword } = newUser;\n      setUser(userWithoutPassword);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Signup error:', error);\n      return { success: false, message: \"An error occurred during signup.\" };\n    }\n  };\n\n  // Login Function\n  const login = (email, password) => {\n    try {\n      // Get users array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      \n      // Find user\n      const userData = users.find(user => user.email === email);\n      if (!userData) return { success: false, message: \"User not found.\" };\n\n      // Check password (in production, use proper password comparison)\n      if (userData.password !== btoa(password)) return { success: false, message: \"Invalid password.\" };\n\n      // Remove sensitive data before storing in state\n      const { password: _, ...userWithoutPassword } = userData;\n      \n      // Set current user\n      setUser(userWithoutPassword);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      \n      return { success: true };\n    } catch (error) {\n      console.error('Login error:', error);\n      return { success: false, message: \"An error occurred during login.\" };\n    }\n  };\n\n  // Logout Function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser');\n    navigate(\"/login\");\n  };\n\n  // Update User Profile\n  const updateProfile = (profileData) => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email === user.email);\n      \n      if (userIndex === -1) return false;\n\n      // Update user profile\n      users[userIndex].profile = {\n        ...users[userIndex].profile,\n        ...profileData\n      };\n\n      // Update localStorage\n      localStorage.setItem('users', JSON.stringify(users));\n      \n      // Update current user state\n      const updatedUser = {\n        ...user,\n        profile: users[userIndex].profile\n      };\n      setUser(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return false;\n    }\n  };\n\n  // Update Subscription\n  const updateSubscription = (subscriptionData) => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email === user.email);\n      \n      if (userIndex === -1) return false;\n\n      // Update user subscription\n      users[userIndex].subscription = subscriptionData;\n\n      // Add to payment history\n      users[userIndex].paymentHistory.push({\n        date: new Date().toISOString(),\n        type: subscriptionData.type,\n        amount: subscriptionData.price,\n        status: 'completed'\n      });\n\n      // Update localStorage\n      localStorage.setItem('users', JSON.stringify(users));\n      \n      // Update current user state\n      const updatedUser = {\n        ...user,\n        subscription: subscriptionData,\n        paymentHistory: users[userIndex].paymentHistory\n      };\n      setUser(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      return true;\n    } catch (error) {\n      console.error('Subscription update error:', error);\n      return false;\n    }\n  };\n\n  // Check if user can use Rocket Credits\n  const canUseRocketCredits = (email) => {\n\n    // Get users array\n    const users = JSON.parse(localStorage.getItem('users') || '[]');\n    \n    // Find user\n    const userData = users.find(user => user.email === email);\n    if (!userData) return { allowed: false, message: \"User not found.\" };\n\n    // Check user status\n    if (userData.status === 'bad') {\n      return { allowed: true, message: \"Your account has been flagged for suspicious payment activity. Rocket Credits can reject your application.\" };\n    }\n\n    // Check risk score\n    if (userData.riskScore > 70) {\n      return { allowed: true, message: \"Due to your account's risk assessment, Rocket Credits can reject your application.\" };\n    }\n\n    return { allowed: true };\n  };\n\n  // Mark user as bad\n  const markUserAsBad = (email, reason = \"Suspicious activity\") => {\n    try {\n      // Update bad users list\n      const updatedBadUsers = [...badUsers, email.toLowerCase()];\n      setBadUsers(updatedBadUsers);\n      localStorage.setItem('badUsers', JSON.stringify(updatedBadUsers));\n\n      // Update user status in users array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email.toLowerCase() === email.toLowerCase());\n      \n      if (userIndex !== -1) {\n        users[userIndex].status = 'bad';\n        users[userIndex].riskScore = 100;\n        users[userIndex].suspensionReason = reason;\n        users[userIndex].suspensionDate = new Date().toISOString();\n        localStorage.setItem('users', JSON.stringify(users));\n      }\n\n      // If the current user is being marked as bad, log them out\n      if (user && user.email.toLowerCase() === email.toLowerCase()) {\n        logout();\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error marking user as bad:', error);\n      return false;\n    }\n  };\n\n  // Mark user as good\n  const markUserAsGood = (email) => {\n    try {\n      // Remove from bad users list\n      const updatedBadUsers = badUsers.filter(e => e.toLowerCase() !== email.toLowerCase());\n      setBadUsers(updatedBadUsers);\n      localStorage.setItem('badUsers', JSON.stringify(updatedBadUsers));\n\n      // Update user status in users array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email.toLowerCase() === email.toLowerCase());\n      \n      if (userIndex !== -1) {\n        users[userIndex].status = 'good';\n        users[userIndex].riskScore = Math.max(0, users[userIndex].riskScore - 50); // Reduce risk score\n        users[userIndex].suspensionReason = null;\n        users[userIndex].suspensionDate = null;\n        localStorage.setItem('users', JSON.stringify(users));\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error marking user as good:', error);\n      return false;\n    }\n  };\n\n  // Increase user risk score\n  const increaseRiskScore = (email, points = 10) => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email.toLowerCase() === email.toLowerCase());\n      \n      if (userIndex !== -1) {\n        users[userIndex].riskScore = Math.min(100, (users[userIndex].riskScore || 0) + points);\n        \n        // If risk score exceeds threshold, mark as bad\n        if (users[userIndex].riskScore >= 80 && users[userIndex].status !== 'bad') {\n          users[userIndex].status = 'bad';\n          \n          // Also add to bad users list\n          const updatedBadUsers = [...badUsers, email.toLowerCase()];\n          setBadUsers(updatedBadUsers);\n          localStorage.setItem('badUsers', JSON.stringify(updatedBadUsers));\n        }\n        \n        localStorage.setItem('users', JSON.stringify(users));\n        \n        // If the current user's risk score is being increased, update their state\n        if (user && user.email.toLowerCase() === email.toLowerCase()) {\n          const updatedUser = {\n            ...user,\n            riskScore: users[userIndex].riskScore,\n            status: users[userIndex].status\n          };\n          setUser(updatedUser);\n          localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n          \n          // If user is now bad, log them out\n          if (users[userIndex].status === 'bad') {\n            logout();\n          }\n        }\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error increasing risk score:', error);\n      return false;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      user, \n      login, \n      signup, \n      logout,\n      updateProfile,\n      updateSubscription,\n      canUseRocketCredits,\n      markUserAsBad,\n      markUserAsGood,\n      increaseRiskScore,\n      badUsers\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom Hook to Use Auth Context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,UAAU,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAC7E,OAASC,WAAW,KAAQ,kBAAkB,CAE9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGP,aAAa,CAAC,CAAC,CAEnC;AACA,KAAM,CAAAQ,SAAS,CAAG,CAChB,qBAAqB,CACrB,qBAAqB,CACrB,mBAAmB,CACpB,CAED;AACA,MAAO,MAAM,CAAAC,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,IAAI,CAAEC,OAAO,CAAC,CAAGX,QAAQ,CAAC,IAAI,CAAC,CAAE;AACxC,KAAM,CAACY,QAAQ,CAAEC,WAAW,CAAC,CAAGb,QAAQ,CAACM,SAAS,CAAC,CAAE;AACrD,KAAM,CAAAQ,QAAQ,CAAGZ,WAAW,CAAC,CAAC,CAC9B;AACAD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,CACtD,GAAIF,UAAU,CAAE,CACdJ,OAAO,CAACO,IAAI,CAACC,KAAK,CAACJ,UAAU,CAAC,CAAC,CACjC,CAEA;AACA,KAAM,CAAAK,cAAc,CAAGJ,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CACvD,GAAIG,cAAc,CAAE,CAClBP,WAAW,CAACK,IAAI,CAACC,KAAK,CAACC,cAAc,CAAC,CAAC,CACzC,CAAC,IAAM,CACLJ,YAAY,CAACK,OAAO,CAAC,UAAU,CAAEH,IAAI,CAACI,SAAS,CAAChB,SAAS,CAAC,CAAC,CAC7D,CACF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAiB,MAAM,CAAGA,CAACC,KAAK,CAAEC,QAAQ,GAAK,CAClC,GAAI,CAEF;AACA,KAAM,CAAAC,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAE/D;AACA,GAAIS,KAAK,CAACC,IAAI,CAACjB,IAAI,EAAIA,IAAI,CAACc,KAAK,GAAKA,KAAK,CAAC,CAAE,CAC5C,MAAO,CAAEI,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,sBAAuB,CAAC,CAC5D,CAEA;AACA,KAAM,CAAAC,OAAO,CAAG,CACdN,KAAK,CACLC,QAAQ,CAAEM,IAAI,CAACN,QAAQ,CAAC,CAAE;AAC1BO,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CACnCC,YAAY,CAAE,IAAI,CAClBC,cAAc,CAAE,EAAE,CAClBC,MAAM,CAAE,MAAM,CAAE;AAChBC,SAAS,CAAE,CAAC,CAAE;AACdC,OAAO,CAAE,CACPC,IAAI,CAAE,EAAE,CACRC,KAAK,CAAE,EAAE,CACTC,OAAO,CAAE,EACX,CACF,CAAC,CAED;AACAhB,KAAK,CAACiB,IAAI,CAACb,OAAO,CAAC,CACnBd,YAAY,CAACK,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,SAAS,CAACI,KAAK,CAAC,CAAC,CAEpD;AACA,KAAM,CAAED,QAAQ,CAAEmB,CAAC,CAAE,GAAGC,mBAAoB,CAAC,CAAGf,OAAO,CACvDnB,OAAO,CAACkC,mBAAmB,CAAC,CAC5B7B,YAAY,CAACK,OAAO,CAAC,aAAa,CAAEH,IAAI,CAACI,SAAS,CAACuB,mBAAmB,CAAC,CAAC,CAExE,MAAO,CAAEjB,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOkB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,eAAe,CAAEA,KAAK,CAAC,CACrC,MAAO,CAAElB,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,kCAAmC,CAAC,CACxE,CACF,CAAC,CAED;AACA,KAAM,CAAAmB,KAAK,CAAGA,CAACxB,KAAK,CAAEC,QAAQ,GAAK,CACjC,GAAI,CACF;AACA,KAAM,CAAAC,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAE/D;AACA,KAAM,CAAAgC,QAAQ,CAAGvB,KAAK,CAACwB,IAAI,CAACxC,IAAI,EAAIA,IAAI,CAACc,KAAK,GAAKA,KAAK,CAAC,CACzD,GAAI,CAACyB,QAAQ,CAAE,MAAO,CAAErB,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,iBAAkB,CAAC,CAEpE;AACA,GAAIoB,QAAQ,CAACxB,QAAQ,GAAKM,IAAI,CAACN,QAAQ,CAAC,CAAE,MAAO,CAAEG,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,mBAAoB,CAAC,CAEjG;AACA,KAAM,CAAEJ,QAAQ,CAAEmB,CAAC,CAAE,GAAGC,mBAAoB,CAAC,CAAGI,QAAQ,CAExD;AACAtC,OAAO,CAACkC,mBAAmB,CAAC,CAC5B7B,YAAY,CAACK,OAAO,CAAC,aAAa,CAAEH,IAAI,CAACI,SAAS,CAACuB,mBAAmB,CAAC,CAAC,CAExE,MAAO,CAAEjB,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAE,MAAOkB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,cAAc,CAAEA,KAAK,CAAC,CACpC,MAAO,CAAElB,OAAO,CAAE,KAAK,CAAEC,OAAO,CAAE,iCAAkC,CAAC,CACvE,CACF,CAAC,CAED;AACA,KAAM,CAAAsB,MAAM,CAAGA,CAAA,GAAM,CACnBxC,OAAO,CAAC,IAAI,CAAC,CACbK,YAAY,CAACoC,UAAU,CAAC,aAAa,CAAC,CACtCtC,QAAQ,CAAC,QAAQ,CAAC,CACpB,CAAC,CAED;AACA,KAAM,CAAAuC,aAAa,CAAIC,WAAW,EAAK,CACrC,GAAI,CACF,KAAM,CAAA5B,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAC/D,KAAM,CAAAsC,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACjC,KAAK,GAAKd,IAAI,CAACc,KAAK,CAAC,CAE9D,GAAI+B,SAAS,GAAK,CAAC,CAAC,CAAE,MAAO,MAAK,CAElC;AACA7B,KAAK,CAAC6B,SAAS,CAAC,CAAChB,OAAO,CAAG,CACzB,GAAGb,KAAK,CAAC6B,SAAS,CAAC,CAAChB,OAAO,CAC3B,GAAGe,WACL,CAAC,CAED;AACAtC,YAAY,CAACK,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,SAAS,CAACI,KAAK,CAAC,CAAC,CAEpD;AACA,KAAM,CAAAgC,WAAW,CAAG,CAClB,GAAGhD,IAAI,CACP6B,OAAO,CAAEb,KAAK,CAAC6B,SAAS,CAAC,CAAChB,OAC5B,CAAC,CACD5B,OAAO,CAAC+C,WAAW,CAAC,CACpB1C,YAAY,CAACK,OAAO,CAAC,aAAa,CAAEH,IAAI,CAACI,SAAS,CAACoC,WAAW,CAAC,CAAC,CAEhE,MAAO,KAAI,CACb,CAAE,MAAOZ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC7C,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA,KAAM,CAAAa,kBAAkB,CAAIC,gBAAgB,EAAK,CAC/C,GAAI,CACF,KAAM,CAAAlC,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAC/D,KAAM,CAAAsC,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACjC,KAAK,GAAKd,IAAI,CAACc,KAAK,CAAC,CAE9D,GAAI+B,SAAS,GAAK,CAAC,CAAC,CAAE,MAAO,MAAK,CAElC;AACA7B,KAAK,CAAC6B,SAAS,CAAC,CAACpB,YAAY,CAAGyB,gBAAgB,CAEhD;AACAlC,KAAK,CAAC6B,SAAS,CAAC,CAACnB,cAAc,CAACO,IAAI,CAAC,CACnCkB,IAAI,CAAE,GAAI,CAAA5B,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAC9B4B,IAAI,CAAEF,gBAAgB,CAACE,IAAI,CAC3BC,MAAM,CAAEH,gBAAgB,CAACI,KAAK,CAC9B3B,MAAM,CAAE,WACV,CAAC,CAAC,CAEF;AACArB,YAAY,CAACK,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,SAAS,CAACI,KAAK,CAAC,CAAC,CAEpD;AACA,KAAM,CAAAgC,WAAW,CAAG,CAClB,GAAGhD,IAAI,CACPyB,YAAY,CAAEyB,gBAAgB,CAC9BxB,cAAc,CAAEV,KAAK,CAAC6B,SAAS,CAAC,CAACnB,cACnC,CAAC,CACDzB,OAAO,CAAC+C,WAAW,CAAC,CACpB1C,YAAY,CAACK,OAAO,CAAC,aAAa,CAAEH,IAAI,CAACI,SAAS,CAACoC,WAAW,CAAC,CAAC,CAEhE,MAAO,KAAI,CACb,CAAE,MAAOZ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA,KAAM,CAAAmB,mBAAmB,CAAIzC,KAAK,EAAK,CAErC;AACA,KAAM,CAAAE,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAE/D;AACA,KAAM,CAAAgC,QAAQ,CAAGvB,KAAK,CAACwB,IAAI,CAACxC,IAAI,EAAIA,IAAI,CAACc,KAAK,GAAKA,KAAK,CAAC,CACzD,GAAI,CAACyB,QAAQ,CAAE,MAAO,CAAEiB,OAAO,CAAE,KAAK,CAAErC,OAAO,CAAE,iBAAkB,CAAC,CAEpE;AACA,GAAIoB,QAAQ,CAACZ,MAAM,GAAK,KAAK,CAAE,CAC7B,MAAO,CAAE6B,OAAO,CAAE,IAAI,CAAErC,OAAO,CAAE,4GAA6G,CAAC,CACjJ,CAEA;AACA,GAAIoB,QAAQ,CAACX,SAAS,CAAG,EAAE,CAAE,CAC3B,MAAO,CAAE4B,OAAO,CAAE,IAAI,CAAErC,OAAO,CAAE,oFAAqF,CAAC,CACzH,CAEA,MAAO,CAAEqC,OAAO,CAAE,IAAK,CAAC,CAC1B,CAAC,CAED;AACA,KAAM,CAAAC,aAAa,CAAG,QAAAA,CAAC3C,KAAK,CAAqC,IAAnC,CAAA4C,MAAM,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,qBAAqB,CAC1D,GAAI,CACF;AACA,KAAM,CAAAG,eAAe,CAAG,CAAC,GAAG5D,QAAQ,CAAEY,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAC,CAC1D5D,WAAW,CAAC2D,eAAe,CAAC,CAC5BxD,YAAY,CAACK,OAAO,CAAC,UAAU,CAAEH,IAAI,CAACI,SAAS,CAACkD,eAAe,CAAC,CAAC,CAEjE;AACA,KAAM,CAAA9C,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAC/D,KAAM,CAAAsC,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACjC,KAAK,CAACiD,WAAW,CAAC,CAAC,GAAKjD,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAC,CAErF,GAAIlB,SAAS,GAAK,CAAC,CAAC,CAAE,CACpB7B,KAAK,CAAC6B,SAAS,CAAC,CAAClB,MAAM,CAAG,KAAK,CAC/BX,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,CAAG,GAAG,CAChCZ,KAAK,CAAC6B,SAAS,CAAC,CAACmB,gBAAgB,CAAGN,MAAM,CAC1C1C,KAAK,CAAC6B,SAAS,CAAC,CAACoB,cAAc,CAAG,GAAI,CAAA1C,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAC1DlB,YAAY,CAACK,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,SAAS,CAACI,KAAK,CAAC,CAAC,CACtD,CAEA;AACA,GAAIhB,IAAI,EAAIA,IAAI,CAACc,KAAK,CAACiD,WAAW,CAAC,CAAC,GAAKjD,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAE,CAC5DtB,MAAM,CAAC,CAAC,CACV,CAEA,MAAO,KAAI,CACb,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,CAAEA,KAAK,CAAC,CAClD,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA,KAAM,CAAA8B,cAAc,CAAIpD,KAAK,EAAK,CAChC,GAAI,CACF;AACA,KAAM,CAAAgD,eAAe,CAAG5D,QAAQ,CAACiE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACL,WAAW,CAAC,CAAC,GAAKjD,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAC,CACrF5D,WAAW,CAAC2D,eAAe,CAAC,CAC5BxD,YAAY,CAACK,OAAO,CAAC,UAAU,CAAEH,IAAI,CAACI,SAAS,CAACkD,eAAe,CAAC,CAAC,CAEjE;AACA,KAAM,CAAA9C,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAC/D,KAAM,CAAAsC,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACjC,KAAK,CAACiD,WAAW,CAAC,CAAC,GAAKjD,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAC,CAErF,GAAIlB,SAAS,GAAK,CAAC,CAAC,CAAE,CACpB7B,KAAK,CAAC6B,SAAS,CAAC,CAAClB,MAAM,CAAG,MAAM,CAChCX,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,CAAGyC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAEtD,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,CAAG,EAAE,CAAC,CAAE;AAC3EZ,KAAK,CAAC6B,SAAS,CAAC,CAACmB,gBAAgB,CAAG,IAAI,CACxChD,KAAK,CAAC6B,SAAS,CAAC,CAACoB,cAAc,CAAG,IAAI,CACtC3D,YAAY,CAACK,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,SAAS,CAACI,KAAK,CAAC,CAAC,CACtD,CAEA,MAAO,KAAI,CACb,CAAE,MAAOoB,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACnD,MAAO,MAAK,CACd,CACF,CAAC,CAED;AACA,KAAM,CAAAmC,iBAAiB,CAAG,QAAAA,CAACzD,KAAK,CAAkB,IAAhB,CAAA0D,MAAM,CAAAb,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAE,SAAA,CAAAF,SAAA,IAAG,EAAE,CAC3C,GAAI,CACF,KAAM,CAAA3C,KAAK,CAAGR,IAAI,CAACC,KAAK,CAACH,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAI,IAAI,CAAC,CAC/D,KAAM,CAAAsC,SAAS,CAAG7B,KAAK,CAAC8B,SAAS,CAACC,CAAC,EAAIA,CAAC,CAACjC,KAAK,CAACiD,WAAW,CAAC,CAAC,GAAKjD,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAC,CAErF,GAAIlB,SAAS,GAAK,CAAC,CAAC,CAAE,CACpB7B,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,CAAGyC,IAAI,CAACI,GAAG,CAAC,GAAG,CAAE,CAACzD,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,EAAI,CAAC,EAAI4C,MAAM,CAAC,CAEtF;AACA,GAAIxD,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,EAAI,EAAE,EAAIZ,KAAK,CAAC6B,SAAS,CAAC,CAAClB,MAAM,GAAK,KAAK,CAAE,CACzEX,KAAK,CAAC6B,SAAS,CAAC,CAAClB,MAAM,CAAG,KAAK,CAE/B;AACA,KAAM,CAAAmC,eAAe,CAAG,CAAC,GAAG5D,QAAQ,CAAEY,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAC,CAC1D5D,WAAW,CAAC2D,eAAe,CAAC,CAC5BxD,YAAY,CAACK,OAAO,CAAC,UAAU,CAAEH,IAAI,CAACI,SAAS,CAACkD,eAAe,CAAC,CAAC,CACnE,CAEAxD,YAAY,CAACK,OAAO,CAAC,OAAO,CAAEH,IAAI,CAACI,SAAS,CAACI,KAAK,CAAC,CAAC,CAEpD;AACA,GAAIhB,IAAI,EAAIA,IAAI,CAACc,KAAK,CAACiD,WAAW,CAAC,CAAC,GAAKjD,KAAK,CAACiD,WAAW,CAAC,CAAC,CAAE,CAC5D,KAAM,CAAAf,WAAW,CAAG,CAClB,GAAGhD,IAAI,CACP4B,SAAS,CAAEZ,KAAK,CAAC6B,SAAS,CAAC,CAACjB,SAAS,CACrCD,MAAM,CAAEX,KAAK,CAAC6B,SAAS,CAAC,CAAClB,MAC3B,CAAC,CACD1B,OAAO,CAAC+C,WAAW,CAAC,CACpB1C,YAAY,CAACK,OAAO,CAAC,aAAa,CAAEH,IAAI,CAACI,SAAS,CAACoC,WAAW,CAAC,CAAC,CAEhE;AACA,GAAIhC,KAAK,CAAC6B,SAAS,CAAC,CAAClB,MAAM,GAAK,KAAK,CAAE,CACrCc,MAAM,CAAC,CAAC,CACV,CACF,CACF,CAEA,MAAO,KAAI,CACb,CAAE,MAAOL,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,CAAEA,KAAK,CAAC,CACpD,MAAO,MAAK,CACd,CACF,CAAC,CAED,mBACE1C,IAAA,CAACC,WAAW,CAAC+E,QAAQ,EAACC,KAAK,CAAE,CAC3B3E,IAAI,CACJsC,KAAK,CACLzB,MAAM,CACN4B,MAAM,CACNE,aAAa,CACbM,kBAAkB,CAClBM,mBAAmB,CACnBE,aAAa,CACbS,cAAc,CACdK,iBAAiB,CACjBrE,QACF,CAAE,CAAAH,QAAA,CACCA,QAAQ,CACW,CAAC,CAE3B,CAAC,CAED;AACA,MAAO,MAAM,CAAA6E,OAAO,CAAGA,CAAA,GAAM,CAC3B,MAAO,CAAAvF,UAAU,CAACM,WAAW,CAAC,CAChC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}