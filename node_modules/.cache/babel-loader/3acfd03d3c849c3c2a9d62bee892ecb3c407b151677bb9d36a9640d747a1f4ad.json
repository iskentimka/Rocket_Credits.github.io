{"ast":null,"code":"var _jsxFileName = \"/Users/edzhisk/Desktop/Rocket Credits/src/context/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Create Auth Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null); // Stores logged-in user\n\n  // Check for existing session on component mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // Signup Function\n  const signup = (email, password) => {\n    try {\n      // Get existing users or initialize empty array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n      // Check if user already exists\n      if (users.some(user => user.email === email)) {\n        return false; // User already exists\n      }\n\n      // Create new user with initial data\n      const newUser = {\n        email,\n        password: btoa(password),\n        // Basic encoding (in production, use proper hashing)\n        createdAt: new Date().toISOString(),\n        subscription: null,\n        paymentHistory: [],\n        profile: {\n          name: '',\n          phone: '',\n          address: ''\n        }\n      };\n\n      // Add new user to users array\n      users.push(newUser);\n      localStorage.setItem('users', JSON.stringify(users));\n\n      // Set current user\n      setUser(newUser);\n      localStorage.setItem('currentUser', JSON.stringify(newUser));\n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  };\n\n  // Login Function\n  const login = (email, password) => {\n    try {\n      // Get users array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n\n      // Find user\n      const userData = users.find(user => user.email === email);\n      if (!userData) return false; // User not found\n\n      // Check password (in production, use proper password comparison)\n      if (userData.password !== btoa(password)) return false;\n\n      // Remove sensitive data before storing in state\n      const {\n        password: _,\n        ...userWithoutPassword\n      } = userData;\n\n      // Set current user\n      setUser(userWithoutPassword);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  // Logout Function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser');\n    window.location.href = \"/login\";\n  };\n\n  // Update User Profile\n  const updateProfile = profileData => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email === user.email);\n      if (userIndex === -1) return false;\n\n      // Update user profile\n      users[userIndex].profile = {\n        ...users[userIndex].profile,\n        ...profileData\n      };\n\n      // Update localStorage\n      localStorage.setItem('users', JSON.stringify(users));\n\n      // Update current user state\n      const updatedUser = {\n        ...user,\n        profile: users[userIndex].profile\n      };\n      setUser(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return false;\n    }\n  };\n\n  // Update Subscription\n  const updateSubscription = subscriptionData => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email === user.email);\n      if (userIndex === -1) return false;\n\n      // Update user subscription\n      users[userIndex].subscription = subscriptionData;\n\n      // Add to payment history\n      users[userIndex].paymentHistory.push({\n        date: new Date().toISOString(),\n        type: subscriptionData.type,\n        amount: subscriptionData.price,\n        status: 'completed'\n      });\n\n      // Update localStorage\n      localStorage.setItem('users', JSON.stringify(users));\n\n      // Update current user state\n      const updatedUser = {\n        ...user,\n        subscription: subscriptionData,\n        paymentHistory: users[userIndex].paymentHistory\n      };\n      setUser(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      return true;\n    } catch (error) {\n      console.error('Subscription update error:', error);\n      return false;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      signup,\n      logout,\n      updateProfile,\n      updateSubscription\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom Hook to Use Auth Context\n_s(AuthProvider, \"5s2qRsV95gTJBmaaTh11GoxYeGE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","storedUser","localStorage","getItem","JSON","parse","signup","email","password","users","some","newUser","btoa","createdAt","Date","toISOString","subscription","paymentHistory","profile","name","phone","address","push","setItem","stringify","error","console","login","userData","find","_","userWithoutPassword","logout","removeItem","window","location","href","updateProfile","profileData","userIndex","findIndex","u","updatedUser","updateSubscription","subscriptionData","date","type","amount","price","status","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["/Users/edzhisk/Desktop/Rocket Credits/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from \"react\";\n\n// Create Auth Context\nconst AuthContext = createContext();\n\n// Auth Provider Component\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null); // Stores logged-in user\n\n  // Check for existing session on component mount\n  useEffect(() => {\n    const storedUser = localStorage.getItem('currentUser');\n    if (storedUser) {\n      setUser(JSON.parse(storedUser));\n    }\n  }, []);\n\n  // Signup Function\n  const signup = (email, password) => {\n    try {\n      // Get existing users or initialize empty array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      \n      // Check if user already exists\n      if (users.some(user => user.email === email)) {\n        return false; // User already exists\n      }\n\n      // Create new user with initial data\n      const newUser = {\n        email,\n        password: btoa(password), // Basic encoding (in production, use proper hashing)\n        createdAt: new Date().toISOString(),\n        subscription: null,\n        paymentHistory: [],\n        profile: {\n          name: '',\n          phone: '',\n          address: ''\n        }\n      };\n\n      // Add new user to users array\n      users.push(newUser);\n      localStorage.setItem('users', JSON.stringify(users));\n      \n      // Set current user\n      setUser(newUser);\n      localStorage.setItem('currentUser', JSON.stringify(newUser));\n      \n      return true;\n    } catch (error) {\n      console.error('Signup error:', error);\n      return false;\n    }\n  };\n\n  // Login Function\n  const login = (email, password) => {\n    try {\n      // Get users array\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      \n      // Find user\n      const userData = users.find(user => user.email === email);\n      if (!userData) return false; // User not found\n\n      // Check password (in production, use proper password comparison)\n      if (userData.password !== btoa(password)) return false;\n\n      // Remove sensitive data before storing in state\n      const { password: _, ...userWithoutPassword } = userData;\n      \n      // Set current user\n      setUser(userWithoutPassword);\n      localStorage.setItem('currentUser', JSON.stringify(userWithoutPassword));\n      \n      return true;\n    } catch (error) {\n      console.error('Login error:', error);\n      return false;\n    }\n  };\n\n  // Logout Function\n  const logout = () => {\n    setUser(null);\n    localStorage.removeItem('currentUser');\n    window.location.href = \"/login\";\n  };\n\n  // Update User Profile\n  const updateProfile = (profileData) => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email === user.email);\n      \n      if (userIndex === -1) return false;\n\n      // Update user profile\n      users[userIndex].profile = {\n        ...users[userIndex].profile,\n        ...profileData\n      };\n\n      // Update localStorage\n      localStorage.setItem('users', JSON.stringify(users));\n      \n      // Update current user state\n      const updatedUser = {\n        ...user,\n        profile: users[userIndex].profile\n      };\n      setUser(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      return true;\n    } catch (error) {\n      console.error('Profile update error:', error);\n      return false;\n    }\n  };\n\n  // Update Subscription\n  const updateSubscription = (subscriptionData) => {\n    try {\n      const users = JSON.parse(localStorage.getItem('users') || '[]');\n      const userIndex = users.findIndex(u => u.email === user.email);\n      \n      if (userIndex === -1) return false;\n\n      // Update user subscription\n      users[userIndex].subscription = subscriptionData;\n\n      // Add to payment history\n      users[userIndex].paymentHistory.push({\n        date: new Date().toISOString(),\n        type: subscriptionData.type,\n        amount: subscriptionData.price,\n        status: 'completed'\n      });\n\n      // Update localStorage\n      localStorage.setItem('users', JSON.stringify(users));\n      \n      // Update current user state\n      const updatedUser = {\n        ...user,\n        subscription: subscriptionData,\n        paymentHistory: users[userIndex].paymentHistory\n      };\n      setUser(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      return true;\n    } catch (error) {\n      console.error('Subscription update error:', error);\n      return false;\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      user, \n      login, \n      signup, \n      logout,\n      updateProfile,\n      updateSubscription\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom Hook to Use Auth Context\nexport const useAuth = () => {\n  return useContext(AuthContext);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}